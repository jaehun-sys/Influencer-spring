<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-
//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Influencer.Influencerspring.mapper.InfluencerMapper">
    <select id="filterResults" resultType="Influencer.Influencerspring.domain.InfProEngTex">
        select
        RANK() over (order by realInf desc)        					    as rankno,
        ip.INF_USERNAME 						                        as username,
        round(	ie.REAL_FOL_MAX * #{rf_weight} +
                ie.ALL_FEED_AVG * #{re_weight} +
                ie.AVG_POST     * #{ac_weight}, 1)              		as realInf,
        ip.BIO 									                        as bio,
        ip.CAT 									                        as cat,
        ie.ALL_FEED_AVG 						                        as reaction,
        ie.AVG_POST 							                        as activity,
        ip.FOL_COUNT 							                        as followers
        from				inf_profile ip
        left outer join		inf_engage ie
        on				    ip.inf_pk = ie.inf_pk
        where  				ip.cat like concat('%',#{inputCat},'%')

        <choose>
            <when test='inputInfSex.equals("F")'>
                and				ip.inf_sex = 'F'			#인플루언서 성별 여
            </when>
            <when test='inputInfSex.equals("M")'>
                and				ip.inf_sex = 'M'			#인플루언서 성별 남
            </when>
            <otherwise>
                and				ip.inf_sex is not null			#기본값 : 모두
            </otherwise>
        </choose>
        <choose>
            <when test='inputInfAge.equals("10~20")'>
                and 			ip.inf_age between 10 and 20	#인플루언서 연령
            </when>
            <when test='inputInfAge.equals("20~30")'>
                and 			ip.inf_age between 20 and 30	#인플루언서 연령
            </when>
            <when test='inputInfAge.equals("30~40")'>
                and 			ip.inf_age between 30 and 40	#인플루언서 연령
            </when>
            <when test='inputInfAge.equals("40~50")'>
                and 			ip.inf_age between 40 and 50	#인플루언서 연령
            </when>
            <when test='inputInfAge.equals("50+")'>
                and 			ip.inf_age between 50 and 150	#인플루언서 연령
            </when>
            <otherwise>
                and             ip.inf_age is not null          #기본값 : 모두
            </otherwise>
        </choose>

        <choose>
            <when test='inputAudSex.equals("F")'>
                and				ie.rate_sex_f between 50 and 100			#오디언스 성별 여
            </when>
            <when test='inputAudSex.equals("M")'>
                and				ie.rate_sex_f between 0 and 50				#오디언스 성별 남
            </when>
            <otherwise>
                and             ie.rate_sex_f is not null          #기본값 : 모두
            </otherwise>
        </choose>
        <choose>
            <when test='inputAudAge.equals("10~20")'>
                and 			ie.avg_age between 10 and 20	#오디언스 연령
            </when>
            <when test='inputAudAge.equals("20~30")'>
                and 			ie.avg_age between 20 and 30	#오디언스 연령
            </when>
            <when test='inputAudAge.equals("30~40")'>
                and 			ie.avg_age between 30 and 40	#오디언스 연령
            </when>
            <when test='inputAudAge.equals("40~50")'>
                and 			ie.avg_age between 40 and 50	#오디언스 연령
            </when>
            <when test='inputAudAge.equals("50+")'>
                and 			ie.avg_age between 50 and 150	#오디언스 연령
            </when>
            <otherwise>
                and             ie.avg_age is not null          #기본값 : 모두
            </otherwise>
        </choose>

    </select>

    <select id="details" resultType="Influencer.Influencerspring.domain.InfEngPro">
        select
                            ip.INF_USERNAME 		as username,
                            ip.BIO 					as bio,
                            ip.CAT 					as category,
                            ie.FEED_COUNT 			as feeds,
                            ip.FOL_COUNT 			as followers,
                            ip.FOLWING_COUNT		as followings,
                            ie.REAL_FOL_MIN 		as real_min,
                            ie.REAL_FOL_MAX 		as real_max,
                            ie.ALL_FEED_AVG 		as reaction,
                            ie.AVG_POST 			as activity,
                            ie.AVG_AGE				as avg_age,
                            ie.TABLEAU 				as tableau,
                            ie.folTypePng           as foltypepng,
                            case
                            <![CDATA[
                            when	ie.RATE_SEX_F > 50	then	CONCAT('여성(', ie.RATE_SEX_F, 	  '%)')
                            when	ie.RATE_SEX_F < 50	then	CONCAT('남성(', 100-ie.RATE_SEX_F, '%)')
                            ]]>
                            else								'성비 동일'
                            end 					as aud_sex
        from 				inf_profile ip
        left outer join 	inf_engage ie
        on				    ip.INF_PK = ie.INF_PK
        where				ip.inf_username = #{username}

    </select>

    <select id="relatedKeyterms" resultType="Influencer.Influencerspring.domain.Term">
        SELECT
            RANK() over (order by 1-SIMILARITY) 	as term_rank,
            t.RELATED_TERM	                        as related_term,
            t.SIMILARITY	                        as similarity
        FROM  				TERM t
        left outer join 	inf_profile ip
        on 	   				t.INF_PK = ip.INF_PK
        WHERE  				t.KEYTERM LIKE concat('%',#{keyterm},'%')
        and    				ip.INF_USERNAME = #{username}
        LIMIT               5

    </select>
</mapper>